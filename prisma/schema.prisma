datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tweets    Tweet[]
  likes     Like[]
  posts     Post[] // Post 모델과의 관계 추가
}

model Tweet {
  id        Int      @id @default(autoincrement())
  content   String
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  likes     Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        Int      @id @default(autoincrement())
  userId    Int
  tweetId   Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  views       Int      @default(0)
  createdAt   DateTime @default(now()) // 필드명 일관성을 위해 created_at → createdAt
  updatedAt   DateTime @updatedAt // 필드명 일관성을 위해 updated_at → updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
}
